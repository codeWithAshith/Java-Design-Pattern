Java design patterns are divided into three categories
- creational -> provide solutions to instantiate an Object
- Structural -> provide different ways to create a Class structure
- Behavioral -> provide a solution for better interaction between objects
                and how to provide loose-coupling and flexibility to extend easily

Creational
    - singleton Pattern
    - Factory Pattern
    - Abstract Factory Pattern
    - builder Pattern
    - Prototype Pattern

Structural
    - Adapter Pattern
    - Composite Pattern
    - Proxy Pattern
    - Flyweight Pattern
    - Facade Pattern
    - Bridge Pattern
    - Decorator Pattern

Behavioral
    - Template Method Pattern
    - Mediator Pattern
    - Chain of Responsibility Pattern
    - Observer Pattern
    - Strategy Pattern
    - Command Pattern
    - State Pattern
    - Visitor Pattern
    - Interpreter Pattern
    - Iterator Pattern
    - Memento Pattern